{
  "name": "electron-react-typescript",
  "version": "1.0.0",
  "description": "An Electron boilerplate including TypeScript, React, Jest and ESLint.",
  "main": "./dist/main.js",
  "scripts": {
    "dev": "npm-run-all -p dev:react electron:serve",
    "dev:electron": "cross-env NODE_ENV=development webpack --config webpack/electron.webpack.js --mode development && npm run start:electron",
    "dev:react": "cross-env NODE_ENV=development webpack-dev-server --config webpack/react.webpack.js --mode development",
    "electron:serve": "wait-on http-get://localhost:4000/ && npm run dev:electron",
    "start:electron": "electron .",
    "build": "npm-run-all build:electron build:react",
    "build:run": "npm-run-all build start:electron",
    "build:electron": "webpack --config webpack/electron.webpack.js",
    "build:react": "webpack --config webpack/react.webpack.js",
    "package": "npm-run-all build package:dist",
    "package:dist": "electron-builder --dir",
    "test": "jest"
  },
  "keywords": [],
  "author": "Diego Fernandes <diego.schell.f@gmail.com>",
  "license": "MIT",
  "devDependencies": {
    "@babel/core": "^7.9.0",
    "@babel/plugin-transform-runtime": "^7.11.0",
    "@babel/preset-env": "^7.9.5",
    "@babel/preset-react": "^7.9.4",
    "@babel/preset-typescript": "^7.9.0",
    "@commitlint/cli": "^9.0.1",
    "@commitlint/config-conventional": "^9.0.1",
    "@commitlint/core": "^9.0.1",
    "@testing-library/jest-dom": "^5.11.0",
    "@testing-library/react": "^10.4.3",
    "@types/electron-devtools-installer": "^2.2.0",
    "@types/jest": "^26.0.3",
    "@types/react": "^16.9.34",
    "@types/react-dom": "^16.9.6",
    "@types/styled-components": "^5.1.0",
    "@typescript-eslint/eslint-plugin": "^3.4.0",
    "@typescript-eslint/parser": "^3.4.0",
    "babel-loader": "^8.1.0",
    "commitizen": "^4.1.2",
    "cross-env": "^7.0.2",
    "cz-conventional-changelog": "3.2.0",
    "electron": "^9.2.1",
    "electron-builder": "^22.7.0",
    "electron-devtools-installer": "^3.1.0",
    "eslint": "^7.3.1",
    "eslint-config-prettier": "^6.11.0",
    "eslint-config-standard": "^14.1.1",
    "eslint-import-resolver-typescript": "^2.0.0",
    "eslint-plugin-import": "^2.22.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-prettier": "^3.1.4",
    "eslint-plugin-promise": "^4.2.1",
    "eslint-plugin-react": "^7.20.1",
    "eslint-plugin-standard": "^4.0.1",
    "html-webpack-plugin": "^4.2.0",
    "husky": "^4.2.5",
    "jest": "^26.1.0",
    "lint-staged": "^10.2.11",
    "npm-run-all": "^4.1.5",
    "prettier": "^2.0.5",
    "ts-jest": "^26.1.1",
    "typescript": "^3.9.5",
    "wait-on": "^5.0.1",
    "webpack": "^4.42.1",
    "webpack-cli": "^3.3.11",
    "webpack-dev-server": "^3.10.3"
  },
  "dependencies": {
    "@babel/runtime": "^7.11.2",
    "@material-ui/core": "^4.11.0",
    "@material-ui/icons": "^4.9.1",
    "@pmmmwh/react-refresh-webpack-plugin": "^0.4.1",
    "@rocketseat/unform": "^1.6.2",
    "@types/react-router-dom": "^5.1.5",
    "date-fns": "^2.16.1",
    "font-awesome": "^4.7.0",
    "immer": "^7.0.8",
    "polished": "^3.6.5",
    "react": "^16.13.1",
    "react-dom": "^16.13.1",
    "react-icons": "^3.11.0",
    "react-input-emoji": "^2.1.0",
    "react-redux": "^7.2.1",
    "react-router-dom": "^5.2.0",
    "react-search-box": "^2.0.2",
    "react-toastify": "^6.0.8",
    "reactotron-react-js": "^3.3.7",
    "reactotron-redux": "^3.1.3",
    "reactotron-redux-saga": "^4.2.3",
    "redux": "^4.0.5",
    "redux-persist": "^6.0.0",
    "redux-saga": "^1.1.3",
    "socket.io-client": "^2.3.0",
    "styled-components": "^5.1.1",
    "url-loader": "^4.1.0",
    "yup": "^0.29.3"
  },
  "build": {
    "appId": "your.id",
    "mac": {
      "category": "public.app-category.video"
    },
    "directories": {
      "output": "packages"
    },
    "files": [
      "package.json",
      "dist/**"
    ]
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "husky": {
    "hooks": {
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS",
      "prepare-commit-msg": "exec < /dev/tty && git cz --hook || true",
      "pre-commit": "lint-staged"
    }
  },
  "lint-staged": {
    "*.{js,jsx,ts,tsx}": [
      "eslint --fix"
    ]
  }
}
